---
layout: funnel
title:  "March 2019 Requester View"
date:   2019-03-28 15:46:00 +0000
datatype: Quantitative
confidence: Medium
datasource: NMS (gp2gp-mi)
categories: data
items: [
    { "name": "Registrations", "value": 439502, "link": "charts/2019-03/registrations" },
    { "name": "Transfers", "value": 268775, "link": "charts/2019-03/transfers" },
    { "name": "GP2GP", "value": 196989, "link": "charts/2019-03/gp2gp" },
    { "name": "Integrations", "value": 157569, "link": "charts/2019-03/integrations" }
] 
---
Data is sourced from **suppliers' data (MI) - March 2019**.
This is the query that gave us the information: 

```sql
index="gp2gp-mi" sourcetype="gppractice-RR" 
    | eval key=RegistrationTime + "-" + RequestorODS + "-" + coalesce(SenderODS, "Unknown") 
    | eval RegistrationType=coalesce(RegistrationType,0)
    | eval RequestFailureType=coalesce(RequestFailureType,-1) 
    | eval RequestFailurePoint=coalesce(RequestFailurePoint,-1)
    | eval RequestErrorCode=tonumber(coalesce(RequestErrorCode,-1))
    | eval ExtractAckCode=tonumber(coalesce(ExtractAckCode,-1))
    | eval ExtractEventTime=coalesce(ExtractAckTime,ExtractTime)
    | eval ExtractResult=if(ExtractAckCode==-1 and isnotnull(ExtractEventTime),0,ExtractAckCode)
    | eval category=case(
        RegistrationType==1 and RequestFailureType==5, "New registration",
        RegistrationType==2 and RequestFailureType==5,"Returning registration (no other GP)",
        RequestFailureType==2,"Already registered",
        RequestFailurePoint==10 or RequestFailurePoint==20,"Patient lookup failure",
        RequestFailureType!=3 and RequestFailureType!=4 and 
            (RequestFailurePoint==40 or RequestFailurePoint==50),"GP system lookup failure",
        (RegistrationType==3 and RequestFailureType==0) or 
            RequestFailureType==3 or RequestFailureType==4 or 
            (RequestFailureType !=5 and RequestFailurePoint==60) or 
            (RequestFailurePoint==0 and isnull(RequestFailureTime)),"Transfer",
        1=1,"Unknown")
    | dedup key 
    | stats count by category 
    | eventstats sum(count) as total
    | sort -count
```
